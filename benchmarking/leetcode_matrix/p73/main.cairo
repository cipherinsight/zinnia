#[executable]
pub fn main() {
    let matrix = array![array![5_u32, 0_u32, 3_u32, 3_u32, 7_u32, 9_u32, 3_u32, 5_u32, 2_u32, 4_u32], array![7_u32, 6_u32, 8_u32, 8_u32, 1_u32, 6_u32, 7_u32, 7_u32, 8_u32, 1_u32], array![5_u32, 9_u32, 8_u32, 9_u32, 4_u32, 3_u32, 0_u32, 3_u32, 5_u32, 0_u32], array![2_u32, 3_u32, 8_u32, 1_u32, 3_u32, 3_u32, 3_u32, 7_u32, 0_u32, 1_u32], array![9_u32, 9_u32, 0_u32, 4_u32, 7_u32, 3_u32, 2_u32, 7_u32, 2_u32, 0_u32], array![0_u32, 4_u32, 5_u32, 5_u32, 6_u32, 8_u32, 4_u32, 1_u32, 4_u32, 9_u32], array![8_u32, 1_u32, 1_u32, 7_u32, 9_u32, 9_u32, 3_u32, 6_u32, 7_u32, 2_u32], array![0_u32, 3_u32, 5_u32, 9_u32, 4_u32, 4_u32, 6_u32, 4_u32, 4_u32, 3_u32]];
    let sol = array![array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 8_u32, 1_u32, 6_u32, 0_u32, 7_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 7_u32, 9_u32, 9_u32, 0_u32, 6_u32, 0_u32, 0_u32], array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32]];

    for i in 0..8_u32 {
        for j in 0..10_u32 {
            if *matrix.at(i).at(j) == 0 {
                for k in 0..8_u32 {
                    assert!(*sol.at(k).at(j) == 0_u32);
                }
                for k in 0..10_u32 {
                    assert!(*sol.at(i).at(k) == 0_u32);
                }
            }
        }
    }
}