#[executable]
pub fn main() {
    let image = array![array![0_u32_u32, 1_u32, 1_u32, 0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32], array![1_u32, 0_u32, 0_u32, 1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32], array![0_u32, 1_u32, 1_u32, 0_u32, 0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32], array![1_u32, 0_u32, 1_u32, 0_u32, 1_u32, 1_u32, 0_u32, 1_u32, 1_u32, 0_u32], array![0_u32, 1_u32, 0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32, 1_u32], array![0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32, 1_u32, 0_u32, 0_u32, 1_u32], array![1_u32, 0_u32, 1_u32, 0_u32, 1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32], array![1_u32, 1_u32, 0_u32, 0_u32, 0_u32, 1_u32, 1_u32, 0_u32, 1_u32, 0_u32], array![0_u32, 1_u32, 0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32], array![1_u32, 1_u32, 0_u32, 0_u32, 1_u32, 0_u32, 0_u32, 1_u32, 1_u32, 0_u32]];
    let result = array![array![0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32, 0_u32, 0_u32, 1_u32], array![0_u32, 1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32, 1_u32, 1_u32, 0_u32], array![1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32, 1_u32, 0_u32, 0_u32, 1_u32], array![1_u32, 0_u32, 0_u32, 1_u32, 0_u32, 0_u32, 1_u32, 0_u32, 1_u32, 0_u32], array![0_u32, 1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32, 0_u32, 1_u32], array![0_u32, 1_u32, 1_u32, 0_u32, 1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32], array![1_u32, 1_u32, 1_u32, 1_u32, 1_u32, 0_u32, 1_u32, 0_u32, 1_u32, 0_u32], array![1_u32, 0_u32, 1_u32, 0_u32, 0_u32, 1_u32, 1_u32, 1_u32, 0_u32, 0_u32], array![1_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 0_u32, 1_u32, 0_u32, 1_u32], array![1_u32, 0_u32, 0_u32, 1_u32, 1_u32, 0_u32, 1_u32, 1_u32, 0_u32, 0_u32]];

    for i in 0_u32..10_u32 {
        for j in 0_u32..10_u32 {
            let p = *image.at(i).at(j);
            assert!((p == 0_u32) || (p == 1_u32));
            let r = *result.at(i).at(j);
            assert!((r == 0_u32) || (r == 1_u32));
        }
    }

    for i in 0_u32..10_u32 {
        for j in 0_u32..10_u32 {
            assert!(*result.at(i).at(j) == 1_u32 - *image.at(i).at(9_u32 - j));
        }
    }
}